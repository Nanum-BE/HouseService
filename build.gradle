buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.nanum'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

def querydslDir = "$buildDir/generated/'querydsl'"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'mysql:mysql-connector-java'
	implementation 'org.modelmapper:modelmapper:3.1.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'
	implementation 'org.springframework.cloud:spring-cloud-starter-config:3.0.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.0.1.RELEASE'
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.1'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp:3.0.0'
	implementation 'io.micrometer:micrometer-registry-prometheus:1.9.2'
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	//kafka
	implementation 'org.springframework.kafka:spring-kafka:2.9.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
